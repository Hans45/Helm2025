name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        config: [Release]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ninja-build cmake

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install cmake ninja

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System' ninja

      - name: Configure CMake (Unix)
        if: runner.os != 'Windows'
        run: |
          mkdir build
          cd build
          cmake -G "Ninja" ..
        shell: bash

      - name: Configure CMake (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir build
          cd build
          cmake -G "Visual Studio 17 2022" -A x64 ..
        shell: powershell

      - name: Build tests (Unix)
        if: runner.os != 'Windows'
        run: |
          cd build
          cmake --build . --config ${{ matrix.config }}
        shell: bash

      - name: Build tests (Windows)
        if: runner.os == 'Windows'
        run: |
          cd build
          cmake --build . --config ${{ matrix.config }}
        shell: powershell

      - name: Run unit tests (Unix)
        if: runner.os != 'Windows'
        run: |
          cd build
          if [ -f parameter_batch_interpolator_test ]; then ./parameter_batch_interpolator_test; fi
          if [ -f parameter_interpolator_test ]; then ./parameter_interpolator_test; fi
        shell: bash
        continue-on-error: false

      - name: Run unit tests (Windows)
        if: runner.os == 'Windows'
        run: |
          cd build
          if (Test-Path .\Release\parameter_batch_interpolator_test.exe) { .\Release\parameter_batch_interpolator_test.exe }
          if (Test-Path .\Release\parameter_interpolator_test.exe) { .\Release\parameter_interpolator_test.exe }
        shell: powershell
        continue-on-error: false
